<h1>Animation</h1>
<p>Animation is handled automatically by the onFrame method.  It is called up to 60 times per second to animate the canvas.</p>
<p>The rotate and scale methods adjust the attributes by the specified amount instead of setting a value so they can be used in animation.</p>
<pre>
var rect = Path.Rectangle(view.center, new Size(50, 50))

function onFrame(event)  {
  rect.rotate(1)

  if(rect.segments[0].point.getDistance(rect.segments[1].point, true) < 10000)  {
    rect.scale(1.005)
  } else {
    rect.scale(0.5)
  }
}
</pre>
<script type='text/paperscript' canvas='animate_canvas'>
  project.currentStyle = {
    strokeColor: "black"
  }
  var rect = Path.Rectangle(view.center, new Size(50, 50))

  function onFrame(event)  {
    rect.rotate(1)

    if(rect.segments[0].point.getDistance(rect.segments[1].point, true) < 10000)  {
      rect.scale(1.005)
    } else {
      rect.scale(0.5)
    }
  }
</script>
<canvas id='animate_canvas' width='500' height='200'></canvas>
<p>Movement can be animated by setting the position of the path.  Moving the actual animation logic outside of the onFrame method makes your life easier when the projec gets bigger.</p>
<pre>
var rect = Path.Rectangle(view.center, new Size(50,50))
var rect_state = "left"

function update_position_and_save_state(obj, state)  {
  if(state == "left")  {
    obj.position.x -= 2
  } else {
    obj.position.x += 2
  }

  if(obj.position.x <= 0)  {
    return "right"
  } else if(obj.position.x >= view.size.width)  {
    return "left"
  } else {
    return state
  }
}

function onFrame(event)  {
  rect_state = update_position_and_save_state(rect, rect_state)
}
</pre>
<script type='text/paperscript' canvas='animate_canvas_two'>
  project.currentStyle = {
    strokeColor: "black"
  }

  var rect = Path.Rectangle(view.center, new Size(50,50))
  var rect_state = "left"

  function update_position_and_save_state(obj, state)  {
    if(state == "left")  {
      obj.position.x -= 2
    } else {
      obj.position.x += 2
    }

    if(obj.position.x <= 0)  {
      return "right"
    } else if(obj.position.x >= view.size.width)  {
      return "left"
    } else {
      return state
    }
  }

  function onFrame(event)  {
    rect_state = update_position_and_save_state(rect, rect_state)
  }
</script>
<canvas id='animate_canvas_two' width='500' height='200'></canvas>
