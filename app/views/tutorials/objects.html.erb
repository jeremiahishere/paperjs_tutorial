<h1>Objects</h1>

<p>Objects are cool.  Here they have been used to improve the example from the previous tutorial.  Initialize is automatically called on when new is called for the object.  Updating a separate point object called loc is useful when updating the location of multiple objects.</p>
<pre>
var MovingRectangle = Base.extend({
  initialize: function()  {
    this.loc = view.center
    this.rect = Path.Rectangle(this.loc, new Size(50,50))
    this.state = "left"
  },
  update: function()  {
    if(this.loc.x <= 0)  {
      this.state = "right"
    } else if(this.loc.x >= view.size.width)  {
      this.state = "left"
    }

    if(this.state == "left")  {
      this.loc.x -= 2
    } else {
      this.loc.x += 2
    }

    this.rect.position = this.loc
  },
})

var moving_rect = new MovingRectangle()

function onFrame(event)  {
  moving_rect.update()
}
</pre>
<script type='text/paperscript' canvas='animate_canvas'>
  project.currentStyle = {
    strokeColor: "black"
  }

  var MovingRectangle = Base.extend({
    initialize: function()  {
      this.loc = view.center
      this.rect = Path.Rectangle(this.loc, new Size(50,50))
      this.state = "left"
    },
    update: function()  {
      if(this.loc.x <= 0)  {
        this.state = "right"
      } else if(this.loc.x >= view.size.width)  {
        this.state = "left"
      }

      if(this.state == "left")  {
        this.loc.x -= 2
      } else {
        this.loc.x += 2
      }

      this.rect.position = this.loc
    },
  })

  var moving_rect = new MovingRectangle()

  function onFrame(event)  {
    moving_rect.update()
  }
</script>
<canvas id='animate_canvas' width='500' height='200'></canvas>
<br />
<p>A more complex example.  Doing this without objects would be annoying.</p>
<pre>
var MovingRectangle = Base.extend({
  initialize: function()  {
    this.loc = Point.random() * view.size
    this.rect = Path.Rectangle(this.loc, new Size(50,50))
    this.circle = Path.Circle(this.loc, 25)
    this.circle.fillColor = "blue"
    this.state = "left"
  },
  update: function()  {
    if(this.loc.x <= 0)  {
      this.state = "right"
    } else if(this.loc.x >= view.size.width)  {
      this.state = "left"
    }

    if(this.state == "left")  {
      this.loc.x -= 2
    } else {
      this.loc.x += 2
    }

    this.rect.position = this.loc
    this.circle.position = this.loc
  },
})

var moving_rects = new Array()
for(var i = 0; i < 10; i++)  {
  moving_rects.push(new MovingRectangle())
}

function onFrame(event)  {
  for(i in moving_rects)  {
    moving_rects[i].update()
  } 
}
</pre>
<script type='text/paperscript' canvas='animate_canvas_two'>
  project.currentStyle = {
    strokeColor: "black"
  }

  var MovingRectangle = Base.extend({
    initialize: function()  {
      this.loc = Point.random() * view.size
      this.rect = Path.Rectangle(this.loc, new Size(50,50))
      this.circle = Path.Circle(this.loc, 25)
      this.circle.fillColor = "blue"
      this.state = "left"
    },
    update: function()  {
      if(this.loc.x <= 0)  {
        this.state = "right"
      } else if(this.loc.x >= view.size.width)  {
        this.state = "left"
      }

      if(this.state == "left")  {
        this.loc.x -= 2
      } else {
        this.loc.x += 2
      }

      this.rect.position = this.loc
      this.circle.position = this.loc
    },
  })

  var moving_rects = new Array()
  for(var i = 0; i < 10; i++)  {
    moving_rects.push(new MovingRectangle())
  }

  function onFrame(event)  {
    for(i in moving_rects)  {
      moving_rects[i].update()
    } 
  }
</script>
<canvas id='animate_canvas_two' width='500' height='200'></canvas>
